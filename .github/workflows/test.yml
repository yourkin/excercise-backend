name: Run Tests

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      POSTGRES_USER: ex_back_user
      POSTGRES_PASSWORD: ex_back_password
      PG_DB: ex_back_db
      PG_HOST: db
      PG_PORT: 5432
      TEST_DB: ex_back_test_db
      RABBIT_MQ_URL: amqp://guest:guest@localhost:5672/
      CELERY_BROKER_URL: amqp://guest:guest@localhost:5672/
      ENVIRONMENT: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create .env
      run: touch .env

    - name: Write to .env
      run: |
        echo "POSTGRES_USER=${{ env.POSTGRES_USER }}" >> .env
        echo "POSTGRES_PASSWORD=${{ env.POSTGRES_PASSWORD }}" >> .env
        echo "PG_DB=${{ env.PG_DB }}" >> .env
        echo "PG_HOST=${{ env.PG_HOST }}" >> .env
        echo "PG_PORT=${{ env.PG_PORT }}" >> .env
        echo "TEST_DB=${{ env.TEST_DB }}" >> .env
        echo "RABBIT_MQ_URL=${{ env.RABBIT_MQ_URL }}" >> .env
        echo "CELERY_BROKER_URL=${{ env.CELERY_BROKER_URL }}" >> .env
        echo "ENVIRONMENT=${{ env.ENVIRONMENT }}" >> .env

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Run tests
      run: scripts/run test
